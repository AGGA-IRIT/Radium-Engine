macro(SUBDIRLIST result curdir)
  file(GLOB children RELATIVE ${curdir} ${curdir}/*)
  set(dirlist "")
  foreach(child ${children})
    if(IS_DIRECTORY ${curdir}/${child})
        list(APPEND dirlist ${child})
    endif()
  endforeach()
  set(${result} ${dirlist})
endmacro()

SUBDIRLIST(SUBDIRS ${CMAKE_CURRENT_SOURCE_DIR})
message("The following plugins will be compiled : ${SUBDIRS}")

# setup to create the Systems.cpp file where all systems are registered.
set (system_string "#include<MainApplication/MainApplication.hpp>\n\n")
set (header_string "/* This file is automatically generated     * \n * from the contents of the Plugins/ folder * \n * see Plugins/CMakeLists.txt for details   */\n\n")
set (register_string "void Ra::MainApplication::registerSystems() {\n")

# Un-comment these lines to compile with the Implicit Plugin (that must be added via a symbolic link to the Plugins/ directory).
#set(IBL_DIR ${CMAKE_CURRENT_SOURCE_DIR}/../../../Radium-Engine-Plugins/ibl)
#set(IBL_INCLUDE_DIR ${IBL_DIR}/include)
#set(IBL_LIBRARY ${IBL_DIR}/libibl.a)
#include_directories(${IBL_INCLUDE_DIR})

#set(ISL_DIR ${CMAKE_CURRENT_SOURCE_DIR}/../../../Radium-Engine-Plugins/isl)
#set(ISL_INCLUDE_DIR ${IBL_DIR}/include)
#set(ISL_LIBRARY ${ISL_DIR}/libisl.a)
#include_directories(${ISL_INCLUDE_DIR})

set(libs
    radiumCore
    radiumEngine
    ${GLEW_LIBRARIES}
    ${Assimp_LIBRARIES}
    ${FREEIMAGE_LIBRARY}
    ${Qt5OpenGL_LIBRARIES}
    ${OPENGL_LIBRARIES}
#    ${IBL_LIBRARY}
#    ${ISL_LIBRARY}
)

foreach(subdir ${SUBDIRS})
    file(GLOB_RECURSE sources ${subdir}/*.cpp)
    file(GLOB_RECURSE headers ${subdir}/*.h ${subdir}/*.hpp)
    file(GLOB_RECURSE inlines ${subdir}/*.inl)

    add_library(
        ${subdir} SHARED
        ${sources}
        ${headers}
        ${inlines})

    set_target_properties(
        ${subdir}
        PROPERTIES
        VERSION 0.1.42)

    target_compile_definitions(${subdir} PRIVATE "-DRA_CORE_IMPORTS")
    target_compile_definitions(${subdir} PRIVATE "-DRA_ENGINE_IMPORTS")
    target_compile_definitions(${subdir} PRIVATE "-D${subdir}_EXPORTS")

    target_link_libraries(
        ${subdir}
        ${libs})

    install(
        TARGETS ${subdir}
        DESTINATION ${LIB_INSTALL_DIR})

    set( header_string
         "${header_string}#include <Plugins/${subdir}/${subdir}System.hpp>\n")

    set( register_string
         "${register_string}    RA_REGISTER_SYSTEM_PLUGIN(${subdir})\n" )

endforeach()

set( header_string "${header_string}\n" )
set( register_string "${register_string}}" )

set( sys_dir ${CMAKE_SOURCE_DIR}/src/MainApplication )
set( sys_file ${sys_dir}/Systems.cpp )
file(WRITE ${sys_file} ${system_string})
file(APPEND ${sys_file} ${header_string})
file(APPEND ${sys_file} ${register_string})

configure_file( ${sys_file} ${sys_dir} )

set(plugins ${SUBDIRS})
